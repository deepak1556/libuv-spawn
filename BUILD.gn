config("libuv_config") {
  include_dirs = [ "//libuv/include" ]

  defines = []
}

static_library("uv") {
  include_dirs = [
    "//libuv/include",
    "//libuv/src",
  ]

  public_configs = [ ":libuv_config" ]

  ldflags = []

  defines = [ "BUILDING_UV_SHARED=1" ]

  cflags_c = [
    "-Wno-incompatible-pointer-types",
    "-Wno-bitwise-op-parentheses",
    "-Wno-implicit-fallthrough",
    "-Wno-implicit-function-declaration",
    "-Wno-missing-braces",
    "-Wno-sign-compare",
    "-Wno-sometimes-uninitialized",
    "-Wno-string-conversion",
    "-Wno-switch",
    "-Wno-unused-function",
    "-Wno-unused-variable",
    "-Wno-unreachable-code",
    "-Wno-unreachable-code-return",
    "-Wno-unused-but-set-variable",
    "-Wno-shadow",
  ]

  libs = []

  sources = [
    "include/uv.h",
    "include/uv/errno.h",
    "include/uv/threadpool.h",
    "include/uv/tree.h",
    "include/uv/version.h",
    "src/fs-poll.c",
    "src/heap-inl.h",
    "src/idna.c",
    "src/idna.h",
    "src/inet.c",
    "src/queue.h",
    "src/random.c",
    "src/strscpy.c",
    "src/strscpy.h",
    "src/threadpool.c",
    "src/timer.c",
    "src/uv-common.c",
    "src/uv-common.h",
    "src/uv-data-getter-setters.c",
    "src/version.c",
  ]

  if (is_win) {
    defines += [ "_GNU_SOURCE" ]
    sources += [
      "include/uv/win.h",
      "src/win/async.c",
      "src/win/atomicops-inl.h",
      "src/win/core.c",
      "src/win/detect-wakeup.c",
      "src/win/dl.c",
      "src/win/error.c",
      "src/win/fs-event.c",
      "src/win/fs.c",
      "src/win/getaddrinfo.c",
      "src/win/getnameinfo.c",
      "src/win/handle-inl.h",
      "src/win/handle.c",
      "src/win/internal.h",
      "src/win/loop-watcher.c",
      "src/win/pipe.c",
      "src/win/poll.c",
      "src/win/process-stdio.c",
      "src/win/process.c",
      "src/win/req-inl.h",
      "src/win/signal.c",
      "src/win/snprintf.c",
      "src/win/stream-inl.h",
      "src/win/stream.c",
      "src/win/tcp.c",
      "src/win/thread.c",
      "src/win/tty.c",
      "src/win/udp.c",
      "src/win/util.c",
      "src/win/winapi.c",
      "src/win/winapi.h",
      "src/win/winsock.c",
      "src/win/winsock.h",
    ]

    libs += [
      "advapi32.lib",
      "iphlpapi.lib",
      "psapi.lib",
      "shell32.lib",
      "user32.lib",
      "userenv.lib",
      "ws2_32.lib",
    ]
  }
}

executable("uv_spawn") {
  sources = [ "iocp-integration.cc" ]
  deps = [ ":uv" ]
}
